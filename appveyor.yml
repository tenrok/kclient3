image:
    - Visual Studio 2017

environment:
  global:
    APP_VER: 3.1.0
    VSVER: 15
    ARCH: x86
    QMAKESPEC: win32-msvc
    MAKETOOL: nmake
    TOOLSDIR: C:\Qt\Tools\QtCreator

  matrix:
    - QT_DIR: C:\Qt\5.12.1\msvc2017
    - ARCH: x64
      QT_DIR: C:\Qt\5.12.1\msvc2017_64

version: $(APP_VER)-{build}

skip_tags: true

cache:
  - windows/dependencies

build:
  parallel: true
  verbosity: detailed

configuration:
  - release

install:
  - set CPU=32
  - IF /I "%ARCH%" == "x64" (set CPU=64)
  - set OPENSSL_DIR="C:\OpenSSL-Win%CPU%"
  - set ICU_DIR_NAME=icu4c-54_1-Win%CPU%-msvc10
  - set ICU_DOWNLOAD_URL="http://download.icu-project.org/files/icu4c/54.1/%ICU_DIR_NAME%.zip"
  - call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvarsall.bat" %ARCH%
  - set PATH=%QT_DIR%\bin;%TOOLSDIR%\bin;%OPENSSL_DIR%\bin;%CD%\bin;%PATH%
  - echo "KClient BUILD %APPVEYOR_BUILD_VERSION%_%QMAKESPEC%_%CONFIGURATION%_%ARCH%"

build_script:
  - echo "Clone, compile and install ECM..."
  # - git clone git://anongit.kde.org/extra-cmake-modules
  - git clone https://github.com/KDE/extra-cmake-modules.git
  - cd extra-cmake-modules
  - mkdir build
  - cd build
  - cmake  -DCMAKE_BUILD_TYPE=%CONFIGURATION% -G "NMake Makefiles JOM" ..
  - call %MAKETOOL%
  - call %MAKETOOL% install
  - cd ../..
  # - echo "Downloading source of KClient..."
  # - git clone https://github.com/solodyagin/kclient3.git
  # - cd kclient3
  # - echo "Apply my patches..."
  # - git config --global user.name "Patch"
  # - git config --global user.email "patcher@patchev.com"
  # - git am --3way --ignore-space-change --keep-cr "..\patches\0001-My-default-settings.patch"
  - set APP_DIR=%CD%
  # - mkdir build
  - cd build
  - echo "Generating NMake Makefiles JOM using CMake..."
  - cmake -DCMAKE_BUILD_TYPE=%CONFIGURATION% -DOPENSSL_ROOT_DIR=%OPENSSL_DIR% -G "NMake Makefiles JOM" ..
  - echo "Build KClient..."
  - call %MAKETOOL%

after_build:
  # Prepare dependencies
  - echo [Paths] > %APP_DIR%\build\bin\qt.conf && echo Plugins="." >> %APP_DIR%\build\bin\qt.conf
  - copy %APP_DIR%\COPYING %APP_DIR%\build\bin\COPYRIGHT.txt
  - cd %APP_DIR%\windows
  - if not exist "dependencies" (mkdir dependencies)
  - cd dependencies
  - if not exist "%ICU_DIR_NAME%.zip" (appveyor DownloadFile %ICU_DOWNLOAD_URL%) else (echo "Use cached %ICU_DIR_NAME%.zip")
  - if not exist "master.tar.gz" (appveyor DownloadFile "http://chromium.googlesource.com/chromium/deps/hunspell_dictionaries/+archive/master.tar.gz") else (echo "Use cached master.tar.gz")
  # - if not exist "locale.tar.gz" (appveyor DownloadFile "https://raw.githubusercontent.com/solodyagin/KClient-Release/master/locale.tar.gz") else (echo "Use cached locale.tar.gz")
  - mkdir ..\wininstall
  - cd ..\wininstall
  # Prepare icu
  - 7z x "%APP_DIR%\windows\dependencies\%ICU_DIR_NAME%.zip"
  # Prepare qtwebengine_dictionaries
  - mkdir qtwebengine_dictionaries
  - cd qtwebengine_dictionaries
  - 7z x "%APP_DIR%\windows\dependencies\master.tar.gz" && 7z x "master.tar" && mkdir "doc" && move README* "doc\" && move COPYING* "doc\"
  # Prepare translations
  # - cd %APP_DIR%\build\bin
  # - 7z x "%APP_DIR%\windows\dependencies\locale.tar.gz" && 7z x "locale.tar"
  - cd %APP_DIR%\windows
  # Set paths
  - set OPENSSL_BIN_DIR=%OPENSSL_DIR%\bin
  - set MSVC_REDIST_DIR="C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Redist\MSVC\14.16.27012\%ARCH%\Microsoft.VC141.CRT"
  - IF /I "%ARCH%" == "x64" (set ICU_BIN_DIR="%APP_DIR%\windows\wininstall\icu\bin64") else (set ICU_BIN_DIR="%APP_DIR%\windows\wininstall\icu\bin")
  - set QTWEBENGINE_DICTIONARIES_DIR="%APP_DIR%\windows\wininstall\qtwebengine_dictionaries"
  - set KCLIENT_BIN_DIR=%APP_DIR%\build\bin
  - set QT_BIN_DIR=%QT_DIR%\bin
  - set QT_PLUGINS_DIR=%QT_DIR%\plugins
  # Make installer
  - call "C:\Program Files (x86)\Inno Setup 5\ISCC.exe" KClient.iss

artifacts:
   - path: windows\KClient*.exe
     name: KClient Installer (%ARCH%)

deploy:
    release: 'Version $(APPVEYOR_BUILD_VERSION)'
    tag: $(APPVEYOR_BUILD_VERSION) # Don't remove or modify tag field
    description: 'KClient $(APP_VER) Windows Installer Released'
    provider: GitHub
    auth_token:
      secure: kNoAeYZR3sC+DdbQSamhDs8A6wcjuN/bqPeZb+6BqxIK6Cf4Cokx0wPQMJzMJh41  # Your encrypted token from GitHub
    artifact: /.*\.exe/         # KClient Installer
    draft: false
    prerelease: false
    # on:
      # appveyor_repo_tag: true                      # Deploy on tag push only

notifications:
  - provider: Email
    to:
      - solodyagin@gmail.com
    on_build_success: true
    on_build_failure: true
    # on_build_status_changed: true

# Remote desktop connection on init
init:
  - ps: IEX ((New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

# # remote desktop connection on finish and block build to not destroy VM
# on_finish:
  # - ps: $blockRdp = $true; IEX ((New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
